{
    "$schema": "https://raw.githubusercontent.com/rdkcentral/rdkservices/main/Tools/json_generator/schemas/interface.schema.json",
    "jsonrpc": "2.0",
    "info": {
        "title": "FrameRate API", 
        "class": "FrameRate", 
        "description": "The `FrameRate` plugin allows you to collect FPS data."
    },
    "common": {
        "$ref": "../common/common.json"
    },
    "definitions": {
        "framerate": {
            "summary": "The display framerate setting (width x height x framerate)",
            "type": "string",
            "example": "3840x2160px48"
        },
        "auto-frm-mode": {
            "summary": "`0` for auto framerate mode disabled, `1` for auto framerate mode enabled",
            "enum": [ 0, 1 ],
            "type": "integer",
            "example": 0
        },
        "frmmode": {
            "summary": "`0` for auto framerate mode disabled, `1` for auto framerate mode enabled",
            "enum": [ 0, 1 ],
            "type": "integer",
            "example": 0
        },
        "newFpsValue": {
            "summary": "New Frames per Second (Fps) value",
            "type": "integer",
            "example": 60
        }
    },
    "methods": {
        "getDisplayFrameRate": {
            "summary": "(Version 2) Returns the current display frame rate values.\n  \n### Events \n\n No events",
            "result": {
                "type":"object",
                "properties": {
                    "framerate": {
                        "$ref": "#/definitions/framerate"
                    },
                    "success": {
                        "$ref": "#/common/success"
                    }
                },
                "required": [
                    "framerate",
                    "success"
                ]
            }
        },
        "getFrmMode": {
            "summary": "(Version 2) Returns the current auto framerate mode.\n  \n### Events \n\n No events",
            "result": {
                "type":"object",
                "properties": {
                    "auto-frm-mode": {
                        "$ref": "#/definitions/auto-frm-mode"
                    },
                    "success": {
                        "$ref": "#/common/success"
                    }
                },
                "required": [
                    "auto-frm-mode",
                    "success"
                ]
            }
        },
        "setCollectionFrequency": {
            "summary": "Sets the FPS data collection interval.\n  \n### Events \n\n No events",
            "params": {
                "type":"object",
                "properties": {
                    "frequency":{
                        "summary": "The amount of time in milliseconds. The default frequency is 10000 milliseconds.",
                        "type":"integer",
                        "default": 10000,
                        "example": 1000 
                    }
                }
            },
            "result": {
                "$ref": "#/common/result"
            }
        },
        "setDisplayFrameRate": {
            "summary": "(Version 2) Sets the display framerate values. \n \n### Events \n| Event | Description | \n| :----------- | :----------- |\n| `onDisplayFrameRateChanging`|Triggered when the framerate changes started.| \n| `onDisplayFrameRateChanged`|Triggered when the framerate changed.|",
            "events": [
                "onDisplayFrameRateChanging",
                "onDisplayFrameRateChanged"
            ],
            "params": {
                "type":"object",
                "properties": {
                    "framerate": {
                        "$ref": "#/definitions/framerate"
                    }
                },
                "required": [
                    "framerate"
                ]
            },
            "result": {
                "$ref": "#/common/result"
            }
        },
        "setFrmMode":{
            "summary": "(Version 2) Sets the auto framerate mode.\n  \n### Events \n\n No events",
            "params": {
                "type":"object",
                "properties": {
                    "frmmode": {
                        "$ref": "#/definitions/frmmode"
                    }
                },
                "required": [
                    "frmmode"
                ]
            },
            "result": {
                "$ref": "#/common/result"
            }
        },
        "startFpsCollection":{
            "summary": "Starts the FPS data collection.\n \n### Events \n| Event | Description | \n| :----------- | :----------- |\n| `onFpsEvent`|Triggered at the end of each interval as defined by the `setCollectionFrequency` method.|",
            "events": [
                "onFpsEvent"
            ],
            "result": {
                "$ref": "#/common/result"
            }
        },
        "stopFpsCollection":{
            "summary": "Stops the FPS data collection.\n \n### Events \n| Event | Description | \n| :----------- | :----------- |\n| `onFpsEvent`|Triggered once after the `stopFpsCollection` method is invoked.|",
            "events": [
                "onFpsEvent"
            ],
            "result": {
                "$ref": "#/common/result"
            }
        },
        "updateFps": {
            "summary": "Updates Fps values.\n  \n### Events \n\n No events",
            "params": {
                "type":"object",
                "properties": {
                    "newFpsValue": {
                        "$ref": "#/definitions/newFpsValue"
                    }
                },
                "required": [
                    "newFpsValue"
                ]
            },
            "result": {
                "$ref": "#/common/result"
            }
        }
    },
    "events":{
        "onDisplayFrameRateChanging":{
            "summary": "Triggered when the framerate changes started"
        },
        "onDisplayFrameRateChanged":{
            "summary": "Triggered when the framerate changed"
        },
        "onFpsEvent":{
            "summary": "Triggered at the end of each interval as defined by the `setCollectionFrequency` method and once after the `stopFpsCollection` method is invoked.",
            "params": {
                "type": "object",
                "properties": {
                    "average": {
                        "summary": "The average FPS",
                        "type": "integer",
                        "example": 0
                    },
                    "min": {
                        "summary": "The minimum FPS",
                        "type": "integer",
                        "example": 0
                    },
                    "max": {
                        "summary": "The maximum FPS",
                        "type": "integer",
                        "example": 0
                    }
                },
                "required": [
                    "average",
                    "min",
                    "max"
                ]    
            }
        }
    }
}